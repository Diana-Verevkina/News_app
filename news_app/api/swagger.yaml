swagger: '2.0'
info:
  title: News API
  description: Документация к API проекта News_app
  contact:
    email: diva2208@mail.ru
  license:
    name: BSD License
  version: v1
schemes:
  - http
basePath: /
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - app_id: []

paths:
  /auth/jwt/create/:
    post:
      operationId: auth_jwt_create_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - JWT-токен
    parameters: []
  /auth/jwt/refresh/:
    post:
      operationId: auth_jwt_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - JWT-токен
    parameters: []
  /auth/jwt/verify/:
    post:
      operationId: auth_jwt_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
        - JWT-токен
    parameters: []
  /auth/users/:
    get:
      operationId: auth_users_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/User'
      tags:
        - Пользователи
    post:
      operationId: auth_users_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/UserCreate'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/UserCreate'
      tags:
        - Пользователи
    parameters: []

  /auth/users/{id}/:
    get:
      operationId: auth_users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - Пользователи
    delete:
      operationId: auth_users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Пользователи
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
  /login/:
    post:
      operationId: login_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenObtainPair'
      tags:
        - Вход в систему
    parameters: []
  /v1/follow/:
    get:
      operationId: v1_follow_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Follow'
      tags:
        - Подписки
    post:
      operationId: v1_follow_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Follow'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Follow'
      tags:
        - Подписки
    parameters: []
  /v1/news/:
    get:
      operationId: v1_news_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/News'
      tags:
        - Новости
    post:
      operationId: v1_news_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/News'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Новости
    parameters: []
  /v1/news/{id}/:
    get:
      operationId: v1_news_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Новости
    put:
      operationId: v1_news_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/News'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Новости
    patch:
      operationId: v1_news_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/News'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Новости
    delete:
      operationId: v1_news_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Новости
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this Новость.
        required: true
        type: integer
  /v1/news/{id}/like/:
    post:
      operationId: v1_news_like
      description: Лайкает `obj`.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/News'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Лайк
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this Новость.
        required: true
        type: integer
  /v1/news/{id}/unlike/:
    post:
      operationId: v1_news_unlike
      description: Удаляет лайк с `obj`.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/News'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/News'
      tags:
        - Дизлайк
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this Новость.
        required: true
        type: integer
  /v1/news/{news_id}/comments/:
    get:
      operationId: v1_news_comments_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Comment'
      tags:
        - Комментарии
    post:
      operationId: v1_news_comments_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
        - Комментарии
    parameters:
      - name: news_id
        in: path
        required: true
        type: string
  /v1/news/{news_id}/comments/{id}/:
    get:
      operationId: v1_news_comments_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
        - Комментарии
    put:
      operationId: v1_news_comments_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
        - Комментарии
    patch:
      operationId: v1_news_comments_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Comment'
      tags:
        - Комментарии
    delete:
      operationId: v1_news_comments_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Комментарии
    parameters:
      - name: id
        in: path
        required: true
        type: string
      - name: news_id
        in: path
        required: true
        type: string
  /v1/profile/:
    get:
      operationId: v1_profile_list
      description: ''
      parameters:
        - name: page
          in: query
          description: A page number within the paginated result set.
          required: false
          type: integer
      responses:
        '200':
          description: ''
          schema:
            required:
              - count
              - results
            type: object
            properties:
              count:
                type: integer
              next:
                type: string
                format: uri
                x-nullable: true
              previous:
                type: string
                format: uri
                x-nullable: true
              results:
                type: array
                items:
                  $ref: '#/definitions/Profile'
      tags:
        - Личная страница пользователя
    post:
      operationId: v1_profile_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Profile'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
        - Личная страница пользователя
    parameters: []
  /v1/profile/{id}/:
    get:
      operationId: v1_profile_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
        - Личная страница пользователя
    put:
      operationId: v1_profile_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Profile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
        - Личная страница пользователя
    patch:
      operationId: v1_profile_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Profile'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Profile'
      tags:
        - Личная страница пользователя
    delete:
      operationId: v1_profile_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - Личная страница пользователя
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this profile.
        required: true
        type: integer
definitions:
  TokenObtainPair:
    required:
      - username
      - password
    type: object
    properties:
      username:
        title: Username
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
  TokenVerify:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  User:
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      id:
        title: ID
        type: integer
        readOnly: true
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        readOnly: true
        minLength: 1
  UserCreate:
    required:
      - username
      - password
    type: object
    properties:
      email:
        title: Email address
        type: string
        format: email
        maxLength: 254
      username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
      id:
        title: ID
        type: integer
        readOnly: true
      password:
        title: Password
        type: string
        minLength: 1
  Activation:
    required:
      - uid
      - token
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
  SendEmailReset:
    required:
      - email
    type: object
    properties:
      email:
        title: Email
        type: string
        format: email
        minLength: 1
  PasswordResetConfirm:
    required:
      - uid
      - token
      - new_password
    type: object
    properties:
      uid:
        title: Uid
        type: string
        minLength: 1
      token:
        title: Token
        type: string
        minLength: 1
      new_password:
        title: New password
        type: string
        minLength: 1
  UsernameResetConfirm:
    required:
      - new_username
    type: object
    properties:
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  SetPassword:
    required:
      - new_password
      - current_password
    type: object
    properties:
      new_password:
        title: New password
        type: string
        minLength: 1
      current_password:
        title: Current password
        type: string
        minLength: 1
  SetUsername:
    required:
      - current_password
      - new_username
    type: object
    properties:
      current_password:
        title: Current password
        type: string
        minLength: 1
      new_username:
        title: Username
        description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
          only.
        type: string
        pattern: ^[\w.@+-]+$
        maxLength: 150
        minLength: 1
  Follow:
    required:
      - author
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        pattern: ^[\w.@+-]+$
        readOnly: true
        default: ''
      author:
        title: Author
        type: string
        pattern: ^[\w.@+-]+$
  Recursive:
    type: object
    properties: {}
  Comment:
    required:
      - text
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      news:
        title: Новость
        description: Ссылка на новость, к которой оставлен комментарий
        type: integer
        x-nullable: true
      author:
        title: Author
        type: string
        pattern: ^[\w.@+-]+$
        readOnly: true
        default: ''
      text:
        title: Текст комментария
        description: Введите текст комментария
        type: string
        minLength: 1
      created:
        title: Created
        type: string
        format: date-time
      parent:
        title: Parent_comment
        type: integer
        x-nullable: true
      children:
        type: array
        items:
          $ref: '#/definitions/Recursive'
        readOnly: true
  News:
    required:
      - text
      - pub_date
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      text:
        title: Текст новости
        description: Введите текст новости
        type: string
        minLength: 1
      author:
        title: Author
        type: string
        pattern: ^[\w.@+-]+$
        readOnly: true
        default: ''
      pub_date:
        title: Pub date
        type: string
        format: date-time
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
      is_fan:
        title: Is fan
        type: boolean
        readOnly: true
      total_likes:
        title: Total likes
        type: string
        readOnly: true
  Profile:
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      user:
        title: User
        type: string
        pattern: ^[\w.@+-]+$
        readOnly: true
        default: ''
      first_name:
        title: Имя
        type: string
        maxLength: 50
        x-nullable: true
      last_name:
        title: Фамилия
        type: string
        maxLength: 50
        x-nullable: true
      birth_year:
        title: Год рождения
        type: integer
        x-nullable: true
      age:
        title: Age
        type: string
        readOnly: true
      description:
        title: Описание канала
        type: string
        x-nullable: true
      image:
        title: Image
        type: string
        readOnly: true
        x-nullable: true
        format: uri
